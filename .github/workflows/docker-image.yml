name: Docker Image CI

on:
  push:
    paths: 'Backend/Aduno/**'
  workflow_dispatch:

env:
  DOCKER_USER: nydery
  DOCKER_CONTAINER: aduno-backend
  REGISTRY: ghcr.io
  IMAGE_NAME: aduno-backend

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Login to the Container registry (Github container registry)
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build API docker image
      run: |
        cd Backend/Aduno
        docker build . --tag ${{ env.IMAGE_NAME }}
    
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        
  start-docker-container-on-vm:
    needs:
      - build-and-push-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Install ssh key
        uses: caberger/install-ssh-key@v1.0
        with:
            ssh-private-key:  ${{ secrets.SSH_PRIVATE_KEY }}
            user: ${{ secrets.REMOTE_USER }}
            server: ${{ secrets.REMOTE_HOST }}
            alias: server

      - name: Remove existing container
        run: |
          ssh server "sudo docker stop ${{ env.DOCKER_CONTAINER }} || echo 'Container doesnt exist!'"
          ssh server "sudo docker rm ${{ env.DOCKER_CONTAINER }} || echo 'No container to remove'"
          
      - name: Pull latest docker image and run container
        run: | 
          IMAGE_PULL_URL=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          ssh server "sudo docker pull $IMAGE_PULL_URL"
          ssh server "sudo docker run -d --name ${{ env.DOCKER_CONTAINER }} -p 8080:80 -p 8081:443 $IMAGE_PULL_URL"
